//https://www.geeksforgeeks.org/find-the-missing-number/
#include <iostream>
using namespace std;

int getMissingNo(int a[], int n)
{
    int N = n + 1;
   
    int total = (N) * (N + 1) / 2;
    for (int i = 0; i < n; i++)
        total -= a[i];
    return total;
}

int getMissingNo_1(int a[], int n)
{
    int i, total = 1;
 
    for (i = 2; i <= (n + 1); i++) {
        total += i;
        total -= a[i - 2];
    }
    return total;
}
int getMissingNo_UsingXor(int a[], int n)
{
    int x1 = a[0];
    int x2 = 1;
    
    for(int i = 1; i < n; i++)
        x1 = x1 ^ a[i];
    for(int i = 2; i <= n+1; i++)
        x2 = x2 ^ i;
    return x1^x2;
}

int getMissingNo_UsingCyclicSort(int arr[], int n)
{
    int i = 0;
    while(i < n)
    {
        int correct = arr[i] - 1;
        if(arr[i] < n && arr[i] != arr[correct])
            swap(arr[i], arr[correct]);
        else
            i++;
    }
    for(int i = 0; i < n; i++)
        if(i != arr[i] - 1)
            return i + 1;
    return n;
}

int main() {
	int arr[] = { 1, 2, 3, 5 };
    int N = sizeof(arr) / sizeof(arr[0]);
   
    // Function call
    int miss = getMissingNo(arr, N);
    cout << miss << endl;
    miss = getMissingNo_1(arr, N);
    cout << miss << endl;
    miss = getMissingNo_UsingXor(arr, N);
    cout << miss << endl;
    miss = getMissingNo_UsingCyclicSort(arr, N);
    cout << miss << endl;
	return 0;
}

